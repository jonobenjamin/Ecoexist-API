name: AWT Data Sync

on:
  schedule:
    # Run daily at 5 AM UTC
    - cron: '0 5 * * *'
  workflow_dispatch: # Allow manual runs

jobs:
  sync-data:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up Google Cloud credentials
      run: |
        # Debug: Check what we're getting from the secret
        echo "Secret length: ${#GOOGLE_CREDENTIALS_BASE64}"
        echo "Secret starts with: ${GOOGLE_CREDENTIALS_BASE64:0:50}..."

        # Decode base64 credentials to file using Python (more reliable)
        python -c "
        import base64
        import os
        import json
        b64_data = os.environ['GOOGLE_CREDENTIALS_BASE64']
        print(f'Base64 input length: {len(b64_data)}')
        try:
            json_data = base64.b64decode(b64_data)
            print(f'Decoded data length: {len(json_data)}')
            with open('gcp-key.json', 'wb') as f:
                f.write(json_data)
            print('✓ Base64 decoded successfully')
            # Quick validation
            with open('gcp-key.json', 'r') as f:
                data = json.load(f)
            print(f'✓ JSON valid. Project: {data[\"project_id\"]}, Client email: {data[\"client_email\"][:30]}...')
        except Exception as e:
            print(f'✗ Base64 decode failed: {e}')
            exit(1)
        "
        # Final validation
        python -c "import json; data=json.load(open('gcp-key.json')); print(f'✓ Final validation passed. Private key: {len(data[\"private_key\"])} chars')" || (echo "JSON invalid" && head -10 gcp-key.json && echo "..." && exit 1)
      shell: bash
      env:
        GOOGLE_CREDENTIALS_BASE64: ${{ secrets.GOOGLE_CREDENTIALS_BASE64 }}

    - name: Run AWT data sync
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/gcp-key.json
        AWT_USERNAME: ${{ secrets.AWT_USERNAME }}
        AWT_PASSWORD: ${{ secrets.AWT_PASSWORD }}
        AWT_API_KEY: ${{ secrets.AWT_API_KEY }}
        GCS_BUCKET_NAME: ${{ secrets.GCS_BUCKET_NAME }}
        GCS_PROJECT_ID: ${{ secrets.GCS_PROJECT_ID }}
      run: |
        python awt_data_sync.py
